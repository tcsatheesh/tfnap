name: Build and deploy a container to an Azure Function App

# env:
#   AZURE_WEBAPP_NAME: MY_WEBAPP_NAME   # set this to your application's name

on:
  workflow_dispatch:

permissions:
  contents: 'read'
  packages: 'write'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REGISTRY: stcgenaidevtrcon.azurecr.io
      TAG: devtrfunctionapp:${{ github.run_id }}
    steps:
      - uses: actions/checkout@v2
      - name: "Build image"
        run: |
          cd azure_functions
          docker build -t $REGISTRY/$TAG .
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: "Login to ACR"
        run: |
          cd azure_functions
          set -euo pipefail
          # see /2021/09/logging-into-acr-in-github-actions/
          # see https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md#calling-post-oauth2exchange-to-get-an-acr-refresh-token
          access_token=$(az account get-access-token --query accessToken -o tsv)
          refresh_token=$(curl https://$REGISTRY/oauth2/exchange -v -d "grant_type=access_token&service=$REGISTRY&access_token=$access_token" | jq -r .refresh_token)
          # The null GUID 0000... tells the container registry that this is an ACR refresh token during the login flow
          docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin $REGISTRY <<< "$refresh_token"
      - name: "Push image to ACR"
        run: |
          cd azure_functions
          docker push $REGISTRY/$TAG

  # deploy:
  #   runs-on: ubuntu-latest

  #   needs: build

  #   environment:
  #     name: 'production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Lowercase the repo name
  #       run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #         images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'
